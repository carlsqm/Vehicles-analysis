import streamlit as st
import pandas as pd
import plotly.express as px
car_data = pd.read_csv('vehicles_us.csv')
 
# TÃ­tulo
st.title("ğŸš— AnÃ¡lisis Interactivo de VehÃ­culos Usados")
st.markdown("Filtra los datos por aÃ±o y condiciÃ³n antes de generar visualizaciones interactivas.")

# ---------------------- FILTROS ----------------------
# Eliminar filas con model_year o condition vacÃ­os
filtered_data = car_data.dropna(subset=["model_year", "condition"])

# Filtro por rango de aÃ±o
min_year = int(filtered_data["model_year"].min())
max_year = int(filtered_data["model_year"].max())
year_range = st.slider("ğŸ“… Selecciona el rango de aÃ±os", min_year, max_year, (min_year, max_year))

# Filtro por condiciÃ³n (checkbox mÃºltiple)
available_conditions = sorted(filtered_data["condition"].dropna().unique())
selected_conditions = st.multiselect("ğŸš˜ Elige condiciones del vehÃ­culo", available_conditions, default=available_conditions)

# Aplicar filtros
filtered_data = filtered_data[
    (filtered_data["model_year"] >= year_range[0]) &
    (filtered_data["model_year"] <= year_range[1]) &
    (filtered_data["condition"].isin(selected_conditions))
]

# ---------------------- BOTÃ“N HISTOGRAMA ----------------------
if st.button("ğŸ“Š Construir histograma de kilometraje"):
    st.write("âœ… Histograma de `odometer` para vehÃ­culos filtrados")
    fig_hist = px.histogram(
        filtered_data.dropna(subset=["odometer"]),
        x="odometer",
        nbins=50,
        title="DistribuciÃ³n del Kilometraje",
        labels={"odometer": "Kilometraje (millas)"},
        color_discrete_sequence=["#636EFA"],
        opacity=0.8
    )
    st.plotly_chart(fig_hist, use_container_width=True)

# ---------------------- BOTÃ“N DISPERSIÃ“N ----------------------
if st.button("ğŸ“ˆ Construir grÃ¡fico de dispersiÃ³n (odometer vs price)"):
    st.write("âœ… GrÃ¡fico de dispersiÃ³n `odometer` vs `price` para vehÃ­culos filtrados")
    fig_scatter = px.scatter(
        filtered_data.dropna(subset=["odometer", "price"]),
        x="odometer",
        y="price",
        color="condition",
        title="RelaciÃ³n entre Kilometraje y Precio",
        labels={"odometer": "Kilometraje (millas)", "price": "Precio (USD)", "condition": "CondiciÃ³n"},
        opacity=0.6,
        color_discrete_sequence=px.colors.qualitative.Set1,
        hover_data=["model", "model_year", "type"]
    )
    st.plotly_chart(fig_scatter, use_container_width=True)